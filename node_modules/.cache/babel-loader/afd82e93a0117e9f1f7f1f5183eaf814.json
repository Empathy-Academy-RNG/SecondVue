{"remainingRequest":"/Users/raul/Desktop/FirstVue/node_modules/babel-loader/lib/index.js!/Users/raul/Desktop/FirstVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/raul/Desktop/FirstVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raul/Desktop/FirstVue/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/raul/Desktop/FirstVue/src/views/Home.vue","mtime":1616446984522},{"path":"/Users/raul/Desktop/FirstVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/raul/Desktop/FirstVue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/raul/Desktop/FirstVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/raul/Desktop/FirstVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9yYXVsL0Rlc2t0b3AvRmlyc3RWdWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IE1vdmllUGFuZWwgZnJvbSAiQC9jb21wb25lbnRzL01vdmllUGFuZWwiOwppbXBvcnQgU2VhcmNoQm94IGZyb20gIkAvY29tcG9uZW50cy9TZWFyY2hCb3giOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkhvbWUiLAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuc2VhcmNoUmVxdWVzdChfdGhpcy5hbGxUZXh0U2VhcmNoKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHNlYXJjaFJlcXVlc3Q6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9zZWFyY2hSZXF1ZXN0ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMih0ZXh0VG9TZWFyY2gpIHsKICAgICAgICB2YXIgcmVzcG9uc2UsIHNlYXJjaERhdGFSZXRyaWV2ZWQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGlmICh0ZXh0VG9TZWFyY2ggIT09ICIiKSB7CiAgICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudFRleHRTZWFyY2ggPSB0ZXh0VG9TZWFyY2g7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRUZXh0U2VhcmNoID0gdGhpcy5hbGxUZXh0U2VhcmNoOwogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygidm9pZGVkIik7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxOwogICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50VGV4dFNlYXJjaCA9IHRoaXMuY3VycmVudFRleHRTZWFyY2gudG9Mb3dlckNhc2UoKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovL2xvY2FsaG9zdDozMDAwL3NlYXJjaC8iICsgdGhpcy5jdXJyZW50VGV4dFNlYXJjaCk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDg7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBzZWFyY2hEYXRhUmV0cmlldmVkID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICB0aGlzLm1vdmllcyA9IHNlYXJjaERhdGFSZXRyaWV2ZWQuaXRlbXM7CiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkTW92aWVEYXRhID0gbnVsbDsKICAgICAgICAgICAgICAgIHRoaXMuaW5pdGlhbFNlYXJjaFN0YXR1cyA9IHRydWU7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDIxOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDE0OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coIkFuIGVycm9yIG9jY3VycmVkIHdoaWxlIGFjY2Vzc2luZyB0aGUgc2VhcmNoIGRhdGE6ICIgKyBfY29udGV4dDIudDAudG9TdHJpbmcoKSk7CiAgICAgICAgICAgICAgICB0aGlzLmluaXRpYWxTZWFyY2hTdGF0dXMgPSBmYWxzZTsKICAgICAgICAgICAgICAgIHRoaXMuc3BlY2lmaWNNb3ZpZURhdGFTdGF0dXMgPSBmYWxzZTsKICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRNb3ZpZURhdGEgPSAtMTsKICAgICAgICAgICAgICAgIHRoaXMubW92aWVzID0gbnVsbDsKCiAgICAgICAgICAgICAgY2FzZSAyMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgdGhpcywgW1sxLCAxNF1dKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gc2VhcmNoUmVxdWVzdChfeCkgewogICAgICAgIHJldHVybiBfc2VhcmNoUmVxdWVzdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gc2VhcmNoUmVxdWVzdDsKICAgIH0oKSwKICAgIHNlbGVjdE1vdmllOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfc2VsZWN0TW92aWUgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKGluZGV4Q2hvc2VuKSB7CiAgICAgICAgdmFyIGFsbE1vdmllRGF0YVJlc3BvbnNlLCBwb3N0ZXJEYXRhUmVzcG9uc2UsIG9tZGJEYXRhUmV0cmlldmVkOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkSUQgPSB0aGlzLm1vdmllc1tpbmRleENob3Nlbl0uaWQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDE7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9tb3ZpZXMvIiArIHRoaXMuc2VsZWN0ZWRJRCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIGFsbE1vdmllRGF0YVJlc3BvbnNlID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goImh0dHA6Ly9vbWRiYXBpLmNvbS8/YXBpa2V5PTQ5MGIyMjQ2Jmk9IiArIHRoaXMuc2VsZWN0ZWRJRCk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIHBvc3RlckRhdGFSZXNwb25zZSA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAxMDsKICAgICAgICAgICAgICAgIHJldHVybiBwb3N0ZXJEYXRhUmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgICAgb21kYkRhdGFSZXRyaWV2ZWQgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICByZXR1cm4gYWxsTW92aWVEYXRhUmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZE1vdmllRGF0YSA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgICAgdGhpcy4kc2V0KHRoaXMuc2VsZWN0ZWRNb3ZpZURhdGEsICJwb3N0ZXJVcmwiLCBvbWRiRGF0YVJldHJpZXZlZC5Qb3N0ZXIpOwogICAgICAgICAgICAgICAgdGhpcy5zcGVjaWZpY01vdmllRGF0YVN0YXR1cyA9IHRydWU7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDIzOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDE4OwogICAgICAgICAgICAgICAgX2NvbnRleHQzLnQwID0gX2NvbnRleHQzWyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coIkFuIGVycm9yIG9jY3VycmVkIHdoaWxlIHRyeWluZyB0byBhY2Nlc3MgdGhlIG1vdmllIGRhdGE6ICIgKyBfY29udGV4dDMudDAudG9TdHJpbmcoKSk7CiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkTW92aWVEYXRhID0gLTE7CiAgICAgICAgICAgICAgICB0aGlzLnNwZWNpZmljTW92aWVEYXRhU3RhdHVzID0gZmFsc2U7CgogICAgICAgICAgICAgIGNhc2UgMjM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMsIHRoaXMsIFtbMSwgMThdXSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIHNlbGVjdE1vdmllKF94MikgewogICAgICAgIHJldHVybiBfc2VsZWN0TW92aWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHNlbGVjdE1vdmllOwogICAgfSgpCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYWxsVGV4dFNlYXJjaDogImF2ZW5nZXJzIiwKICAgICAgY3VycmVudFRleHRTZWFyY2g6ICJhdmVuZ2VycyIsCiAgICAgIG1vdmllczogbnVsbCwKICAgICAgc2VsZWN0ZWRJRDogbnVsbCwKICAgICAgc2VsZWN0ZWRNb3ZpZURhdGE6IG51bGwsCiAgICAgIGluaXRpYWxTZWFyY2hTdGF0dXM6IHRydWUsCiAgICAgIHNwZWNpZmljTW92aWVEYXRhU3RhdHVzOiBmYWxzZQogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIE1vdmllUGFuZWw6IE1vdmllUGFuZWwsCiAgICBTZWFyY2hCb3g6IFNlYXJjaEJveAogIH0KfTs="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <SearchBox v-on:search-change=\"searchRequest\"></SearchBox>\n    <div\n      v-if=\"movies || this.currentTextSearch !== ''\"\n      id=\"list-of-movies\"\n      data-test=\"list-of-movies\"\n    >\n      <ul id=\"main-list-movies\">\n        <li\n          class=\"movie-list-element\"\n          v-for=\"(movie, index) in movies\"\n          :key=\"movie.id\"\n          data-test=\"movie-list-item\"\n        >\n          <a\n            class=\"movie-list-link\"\n            @click.prevent=\"selectMovie(index)\"\n            href=\"\"\n            data-test=\"movie-list-link\"\n            >{{ movie.title }} ({{ movie.startYear }})</a\n          >\n        </li>\n      </ul>\n    </div>\n    <div v-if=\"!this.initialSearchStatus\" id=\"search-fail-panel\">\n      <img src=\"../assets/warning.png\" alt=\"\" id=\"search-fail-image\" />\n      <h1>Something went wrong, please try again.</h1>\n      <button\n        data-test=\"retry-btn\"\n        id=\"try-again-btn\"\n        @click.prevent=\"searchRequest(allTextSearch)\"\n      >\n        Search again\n      </button>\n    </div>\n    <div id=\"movie-info-panel\">\n      <MoviePanel :selected-movie-data=\"selectedMovieData\"></MoviePanel>\n    </div>\n  </div>\n</template>\n\n<script>\nimport MoviePanel from \"@/components/MoviePanel\";\nimport SearchBox from \"@/components/SearchBox\";\n\nexport default {\n  name: \"Home\",\n  async created() {\n    await this.searchRequest(this.allTextSearch);\n  },\n  methods: {\n    searchRequest: async function(textToSearch) {\n      if (textToSearch !== \"\") {\n        this.currentTextSearch = textToSearch;\n      } else {\n        this.currentTextSearch = this.allTextSearch;\n        console.log(\"voided\");\n      }\n      try {\n        this.currentTextSearch = this.currentTextSearch.toLowerCase();\n        const response = await fetch(\n          \"http://localhost:3000/search/\" + this.currentTextSearch\n        );\n        const searchDataRetrieved = await response.json();\n        this.movies = searchDataRetrieved.items;\n        this.selectedMovieData = null;\n        this.initialSearchStatus = true;\n      } catch (err) {\n        console.log(\n          \"An error occurred while accessing the search data: \" + err.toString()\n        );\n        this.initialSearchStatus = false;\n        this.specificMovieDataStatus = false;\n        this.selectedMovieData = -1;\n        this.movies = null;\n      }\n    },\n    selectMovie: async function(indexChosen) {\n      this.selectedID = this.movies[indexChosen].id;\n      try {\n        const allMovieDataResponse = await fetch(\n          \"http://localhost:3000/movies/\" + this.selectedID\n        );\n        const posterDataResponse = await fetch(\n          \"http://omdbapi.com/?apikey=490b2246&i=\" + this.selectedID\n        );\n        const omdbDataRetrieved = await posterDataResponse.json();\n        this.selectedMovieData = await allMovieDataResponse.json();\n        this.$set(\n          this.selectedMovieData,\n          \"posterUrl\",\n          omdbDataRetrieved.Poster\n        );\n        this.specificMovieDataStatus = true;\n      } catch (err) {\n        console.log(\n          \"An error occurred while trying to access the movie data: \" +\n            err.toString()\n        );\n        this.selectedMovieData = -1;\n        this.specificMovieDataStatus = false;\n      }\n    }\n  },\n  data: function() {\n    return {\n      allTextSearch: \"avengers\",\n      currentTextSearch: \"avengers\",\n      movies: null,\n      selectedID: null,\n      selectedMovieData: null,\n      initialSearchStatus: true,\n      specificMovieDataStatus: false\n    };\n  },\n  components: {\n    MoviePanel: MoviePanel,\n    SearchBox: SearchBox\n  }\n};\n</script>\n<style>\nhtml,\nbody {\n  height: 100%;\n  width: 100%;\n  background-image: linear-gradient(to right, blue, purple);\n  color: white;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n#list-of-movies {\n  width: 49.5%;\n  float: left;\n  text-align: center;\n}\n\n#main-list-movies {\n  border-right: 2px solid white;\n}\n\n#main-list-movies:empty {\n  border-right: 2px solid transparent;\n}\n\n#search-fail-panel {\n  margin-top: 40px;\n  width: 100%;\n  float: left;\n  text-align: center;\n  color: white;\n  position: fixed;\n  top: 190px;\n}\n\n#search-fail-image {\n  width: 10em;\n  filter: invert(100%);\n}\n\n#try-again-btn {\n  border: 1px solid white;\n  padding: 10px 20px;\n  color: white;\n  background-color: transparent;\n  font-family: Avenir, sans-serif;\n  font-size: 1em;\n}\n\n#try-again-btn:hover {\n  color: black;\n  background-color: white;\n  cursor: pointer;\n}\n\nul {\n  width: 100%;\n}\n\nli.movie-list-element {\n  list-style: none;\n  width: 80%;\n  text-align: center;\n  padding: 20px;\n  font-size: 1.25em;\n  height: 100px;\n}\n\na {\n  text-decoration: none;\n}\n\na.movie-list-link {\n  font-size: 1em;\n  padding: 10px;\n  color: white;\n  line-height: 2px;\n  border-bottom: 2px solid transparent;\n}\n\na.movie-list-link:hover {\n  border-bottom: 2px solid white;\n}\n\n@media (max-width: 1000px) {\n  #list-of-movies {\n    width: 50%;\n    border: none;\n  }\n}\n</style>\n"],"sourceRoot":"src/views"}]}