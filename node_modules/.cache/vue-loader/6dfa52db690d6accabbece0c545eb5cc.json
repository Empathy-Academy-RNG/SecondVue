{"remainingRequest":"/Users/raul/Desktop/SecondVue/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raul/Desktop/SecondVue/src/components/SearchBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/raul/Desktop/SecondVue/src/components/SearchBox.vue","mtime":1620342487745},{"path":"/Users/raul/Desktop/SecondVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/raul/Desktop/SecondVue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/raul/Desktop/SecondVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/raul/Desktop/SecondVue/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IF8gPSByZXF1aXJlKCJsb2Rhc2giKTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJTZWFyY2hCb3giLAogIG1ldGhvZHM6IHsKICAgIHNlbmRSZXF1ZXN0UGV0aXRpb246IGZ1bmN0aW9uKHRleHRPZlJlcXVlc3QpIHsKICAgICAgdGhpcy4kZW1pdCgic2VhcmNoLWNoYW5nZSIsIHRleHRPZlJlcXVlc3QpOwogICAgfSwKICAgIG9uU2VhcmNoQ2hhbmdlOiBfLmRlYm91bmNlKGZ1bmN0aW9uKGV2ZW50KSB7CiAgICAgIGlmIChldmVudC50YXJnZXQudmFsdWUgPT09ICIiKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHRoaXMuJGVtaXQoInNlYXJjaC1jaGFuZ2UiLCBldmVudC50YXJnZXQudmFsdWUpOwogICAgfSwgNzAwKSwKICAgIHNlYXJjaEJ5U3VnZ2VzdGlvbjogZnVuY3Rpb24oc3VnZ2VzdGlvblRleHQpIHsKICAgICAgdGhpcy4kZGF0YS5zdWdnZXN0aW9uU3RyaW5nLnN1Z2dlc3Rpb24gPSBzdWdnZXN0aW9uVGV4dDsKICAgICAgdGhpcy5zZW5kUmVxdWVzdFBldGl0aW9uKHN1Z2dlc3Rpb25UZXh0KTsKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uKCkgewogICAgcmV0dXJuIHsKICAgICAgc3VnZ2VzdGlvblN0cmluZzogewogICAgICAgIHN1Z2dlc3Rpb246ICIiCiAgICAgIH0KICAgIH07CiAgfQp9Owo="},{"version":3,"sources":["SearchBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SearchBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"search-box-container\">\n    <input\n      @input=\"onSearchChange\"\n      type=\"search\"\n      placeholder=\"Search for a movie\"\n      :value=\"suggestionString.suggestion\"\n    />\n    <img class=\"search-box-image\" src=\"../assets/search.png\" alt=\"\" />\n  </div>\n</template>\n\n<script>\nconst _ = require(\"lodash\");\nexport default {\n  name: \"SearchBox\",\n  methods: {\n    sendRequestPetition: function(textOfRequest) {\n      this.$emit(\"search-change\", textOfRequest);\n    },\n    onSearchChange: _.debounce(function(event) {\n      if (event.target.value === \"\") {\n        return;\n      }\n      this.$emit(\"search-change\", event.target.value);\n    }, 700),\n    searchBySuggestion: function(suggestionText) {\n      this.$data.suggestionString.suggestion = suggestionText;\n      this.sendRequestPetition(suggestionText);\n    }\n  },\n  data: function() {\n    return {\n      suggestionString: {\n        suggestion: \"\"\n      }\n    };\n  }\n};\n</script>\n\n<style scoped>\ninput {\n  display: inline-block;\n  padding: 20px;\n  width: 26em;\n  border: 1px solid black;\n  margin: 100px auto;\n  font-size: 1.5em;\n  transition: width 0.2s ease-in-out;\n}\ninput:focus {\n  border: 1px solid white;\n  width: 32em;\n}\n\ninput:focus::placeholder {\n  color: transparent;\n}\n\ninput:focus + img.search-box-image {\n  opacity: 0;\n}\n\n.search-box-image {\n  transition: opacity 0.3s ease-in-out;\n}\n\n.search-box-image {\n  width: 50px;\n  padding-left: 20px;\n  display: inline;\n  padding-top: 50px;\n  position: relative;\n  top: 1em;\n}\n</style>\n"]}]}