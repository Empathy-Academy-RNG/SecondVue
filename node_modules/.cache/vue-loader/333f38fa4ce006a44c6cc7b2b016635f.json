{"remainingRequest":"/Users/raul/Desktop/SecondVue/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raul/Desktop/SecondVue/src/components/facets/GenreFacet.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/raul/Desktop/SecondVue/src/components/facets/GenreFacet.vue","mtime":1620344712016},{"path":"/Users/raul/Desktop/SecondVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/raul/Desktop/SecondVue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/raul/Desktop/SecondVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/raul/Desktop/SecondVue/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiR2VucmVGYWNldCIsCiAgZGF0YTogZnVuY3Rpb24oKSB7CiAgICByZXR1cm4gewogICAgICBjaGVja2VkOiBbXSwKICAgICAgY29sbGFwc2VkOiBmYWxzZQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdlbnJlRmFjZXRDaGFuZ2VkOiBmdW5jdGlvbihldmVudCkgewogICAgICBsZXQgZ2VucmVDaGFuZ2VkID0gZXZlbnQudGFyZ2V0LnZhbHVlOwogICAgICBpZiAoZXZlbnQudGFyZ2V0LmNoZWNrZWQpIHsKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoInNldFNlbGVjdGVkR2VucmVGYWNldHMiLCBnZW5yZUNoYW5nZWQpOwogICAgICAgIHRoaXMuJGRhdGEuY2hlY2tlZC5wdXNoKGV2ZW50LnRhcmdldC52YWx1ZS5zcGxpdCgiLCIpWzBdKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoInJlbW92ZUdlbnJlRmFjZXQiLCBnZW5yZUNoYW5nZWQpOwogICAgICAgIGxldCBpbmRleFRvUmVtb3ZlID0gdGhpcy4kZGF0YS5jaGVja2VkLmluZGV4T2YoCiAgICAgICAgICBldmVudC50YXJnZXQudmFsdWUuc3BsaXQoIiwiKVswXQogICAgICAgICk7CiAgICAgICAgdGhpcy4kZGF0YS5jaGVja2VkLnNwbGljZShpbmRleFRvUmVtb3ZlLCAxKTsKICAgICAgfQogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgibW92aWVSZXF1ZXN0Iik7CiAgICB9LAogICAgY2xlYXJGYWNldHM6IGZ1bmN0aW9uKCkgewogICAgICB0aGlzLiRkYXRhLmNoZWNrZWQgPSBbXTsKICAgIH0sCiAgICBjb2xsYXBzZUZhY2V0czogZnVuY3Rpb24oKSB7CiAgICAgIHRoaXMuJGRhdGEuY29sbGFwc2VkID0gIXRoaXMuJGRhdGEuY29sbGFwc2VkOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["GenreFacet.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GenreFacet.vue","sourceRoot":"src/components/facets","sourcesContent":["<template>\n  <div\n    class=\"genre-facet-panel\"\n    :style=\"{\n      height: collapsed ? '40px' : '300px',\n      overflowY: collapsed ? 'hidden' : 'auto'\n    }\"\n  >\n    <h3 class=\"facet-title\">\n      Genre\n      <span class=\"collapse-facet-span\"\n        ><img\n          src=\"../../assets/collapse.png\"\n          class=\"collapse-facet-img\"\n          alt=\"\"\n          @click=\"collapseFacets\"\n          :style=\"{\n            transform: collapsed ? 'scaleY(1)' : 'scaleY(-1)'\n          }\"\n      /></span>\n    </h3>\n    <div\n      class=\"genre-facet-container\"\n      v-for=\"(genre, index) in $store.state.genres\"\n      :key=\"index\"\n    >\n      <input\n        type=\"checkbox\"\n        id=\"'checkbox-genre-' + index\"\n        name=\"genre\"\n        :value=\"genre\"\n        @click=\"genreFacetChanged\"\n        :checked=\"checked.indexOf(genre[0].split(',')[0]) !== -1\"\n      />\n      <label :for=\"'checkbox-genre-' + index\" class=\"checkbox-custom-label\">{{\n        genre[0]\n      }}</label>\n      <span class=\"number-facets\"> ({{ genre[1] }})</span>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"GenreFacet\",\n  data: function() {\n    return {\n      checked: [],\n      collapsed: false\n    };\n  },\n  methods: {\n    genreFacetChanged: function(event) {\n      let genreChanged = event.target.value;\n      if (event.target.checked) {\n        this.$store.commit(\"setSelectedGenreFacets\", genreChanged);\n        this.$data.checked.push(event.target.value.split(\",\")[0]);\n      } else {\n        this.$store.commit(\"removeGenreFacet\", genreChanged);\n        let indexToRemove = this.$data.checked.indexOf(\n          event.target.value.split(\",\")[0]\n        );\n        this.$data.checked.splice(indexToRemove, 1);\n      }\n      this.$store.dispatch(\"movieRequest\");\n    },\n    clearFacets: function() {\n      this.$data.checked = [];\n    },\n    collapseFacets: function() {\n      this.$data.collapsed = !this.$data.collapsed;\n    }\n  }\n};\n</script>\n\n<style scoped>\ninput[type=\"checkbox\"] {\n  transform: scale(1.75);\n}\n\n.genre-facet-panel {\n  width: 100%;\n  height: 300px;\n  box-sizing: content-box;\n  overflow-y: scroll;\n  margin-top: 60px;\n}\n\n.facet-title {\n  width: 80%;\n  text-align: center;\n  text-transform: uppercase;\n  color: black;\n  position: sticky;\n  top: 0;\n  border-bottom: 1px solid black;\n  margin: 0 auto 10px;\n  background-color: rgb(255, 211, 86);\n  padding: 8px;\n  z-index: 2;\n}\n\n.collapse-facet-span {\n  padding-left: 20px;\n  position: absolute;\n  top: 2px;\n}\n\n.collapse-facet-img {\n  margin-left: 10px;\n  width: 40px;\n  display: inline;\n  cursor: pointer;\n}\n\ninput {\n  margin: 10px;\n}\n\n.genre-facet-container {\n  margin-top: 30px;\n  overflow: hidden;\n}\n\nlabel {\n  color: black;\n  font-size: 1em;\n  text-transform: capitalize;\n}\n\n.number-facets {\n  color: black;\n}\n</style>\n"]}]}