{"remainingRequest":"/Users/raul/Desktop/FirstVue/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/raul/Desktop/FirstVue/src/components/facets/MediaTypeFacet.vue?vue&type=style&index=0&id=2da89ba8&scoped=true&lang=css&","dependencies":[{"path":"/Users/raul/Desktop/FirstVue/src/components/facets/MediaTypeFacet.vue","mtime":1619114155934},{"path":"/Users/raul/Desktop/FirstVue/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/raul/Desktop/FirstVue/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/raul/Desktop/FirstVue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/raul/Desktop/FirstVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/raul/Desktop/FirstVue/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm1lZGlhLXR5cGUtZmFjZXQtcGFuZWwgewogIG1hcmdpbi10b3A6IDYwcHg7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAyNTBweDsKICBvdmVyZmxvdy15OiBzY3JvbGw7CiAgYm94LXNpemluZzogY29udGVudC1ib3g7Cn0KCi5mYWNldC10aXRsZSB7CiAgd2lkdGg6IDgwJTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsKICBjb2xvcjogd2hpdGU7CiAgcG9zaXRpb246IHN0aWNreTsKICB0b3A6IDA7CiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHdoaXRlOwogIG1hcmdpbjogMCBhdXRvIDEwcHg7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEzLCAwLCAyNDIpOwogIHBhZGRpbmc6IDhweDsKfQoKLm1lZGlhLXR5cGUtZmFjZXQtY29udGFpbmVyIHsKICBtYXJnaW4tdG9wOiAzMHB4Owp9CgppbnB1dCB7CiAgbWFyZ2luOiAxMHB4Owp9CgpsYWJlbCB7CiAgY29sb3I6IHdoaXRlOwogIGZvbnQtc2l6ZTogMWVtOwogIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplOwp9Cg=="},{"version":3,"sources":["MediaTypeFacet.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"MediaTypeFacet.vue","sourceRoot":"src/components/facets","sourcesContent":["<template>\n  <div class=\"media-type-facet-panel\">\n    <h3 class=\"facet-title\">Media type</h3>\n    <div\n      v-for=\"(mediaType, index) in $store.state.mediaTypes\"\n      :key=\"index\"\n      class=\"media-type-facet-container\"\n    >\n      <input\n        type=\"checkbox\"\n        id=\"'checkbox-type-' + index\"\n        name=\"mediaType\"\n        :value=\"mediaType\"\n        @click=\"mediaTypeFacetChanged\"\n        v-model=\"selected\"\n        :checked=\"checked\"\n      />\n      <label :for=\"'checkbox-type-' + index\" class=\"checkbox-custom-label\">{{\n        mediaType[0]\n      }}</label>\n      <span class=\"number-facets\"> ({{ mediaType[1] }})</span>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"MediaTypeFacet\",\n  data: function() {\n    return {\n      selected: [this.$store.state.selectedMediaTypeFacets],\n      checked: [this.$store.state.selectedMediaTypeFacets]\n    };\n  },\n  methods: {\n    mediaTypeFacetChanged: function(event) {\n      let mediaTypeChanged = event.target.value;\n      if (event.target.checked) {\n        this.$store.commit(\"setSelectedMediaTypeFacets\", mediaTypeChanged);\n      } else {\n        this.$store.commit(\"removeMediaTypeFacet\", mediaTypeChanged);\n      }\n      this.$store.dispatch(\"movieRequest\");\n    },\n    clearFacets: function() {\n      for (let i = 0; i < this.$store.state.mediaTypes.length; i++) {\n        let indexToRemove = this.$data.selected.indexOf(\n          this.$store.state.mediaTypes[i]\n        );\n        this.$data.selected.splice(indexToRemove, 1);\n      }\n    }\n  },\n  mounted() {\n    this.$data.checked = this.$store.state.selectedMediaTypeFacets;\n  }\n};\n</script>\n\n<style scoped>\n.media-type-facet-panel {\n  margin-top: 60px;\n  width: 100%;\n  height: 250px;\n  overflow-y: scroll;\n  box-sizing: content-box;\n}\n\n.facet-title {\n  width: 80%;\n  text-align: center;\n  text-transform: uppercase;\n  color: white;\n  position: sticky;\n  top: 0;\n  border-bottom: 1px solid white;\n  margin: 0 auto 10px;\n  background-color: rgb(13, 0, 242);\n  padding: 8px;\n}\n\n.media-type-facet-container {\n  margin-top: 30px;\n}\n\ninput {\n  margin: 10px;\n}\n\nlabel {\n  color: white;\n  font-size: 1em;\n  text-transform: capitalize;\n}\n</style>\n"]}]}